AWSTemplateFormatVersion: "2010-09-09"
Description: CloudFormation Template for MenuAPI

Resources:
  MenuApiGateway:
    Type: "AWS::ApiGateway::RestApi"
    Properties:
      Name: "MenuAPI"
      EndpointConfiguration:
        Types:
          - "REGIONAL"

  GetMenuGatewayResponse4:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
      ResponseType: "DEFAULT_4XX"
      RestApiId:
        Ref: "MenuApiGateway"
      StatusCode: "200"

  GetMenuResponse5:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
      ResponseType: "DEFAULT_5XX"
      RestApiId:
        Ref: "MenuApiGateway"
      StatusCode: "200"

  GetMenuApiResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId:
        Ref: "MenuApiGateway"
      ParentId:
        Fn::GetAtt: ["MenuApiGateway", "RootResourceId"]
      PathPart: "getmenu"

  GetMenuMethodOptions:
    Type: "AWS::ApiGateway::Method"
    Properties:
      RestApiId:
        Ref: "MenuApiGateway"
      ResourceId:
        Ref: "GetMenuApiResource"
      HttpMethod: "OPTIONS"
      AuthorizationType: "NONE"
      Integration:
        Type: "MOCK"
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: "{}"
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
          ResponseModels:
            application/json: "Empty"

  GetMenuApiMethodPost:
    Type: "AWS::ApiGateway::Method"
    Properties:
      RestApiId:
        Ref: "MenuApiGateway"
      ResourceId:
        Ref: "GetMenuApiResource"
      HttpMethod: "POST"
      AuthorizationType: "NONE"
      Integration:
        Type: "AWS"
        IntegrationHttpMethod: "POST"
        Uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:576225417277:function:getMenuData/invocations"
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        Credentials: "arn:aws:iam::576225417277:role/LambdaAdminRole"
      MethodResponses:
        - StatusCode: "200"
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false

  GetMenuApiStage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      DeploymentId: !Ref GetMenuAPIDeployment
      RestApiId: !Ref MenuApiGateway
      StageName: "dev"

  GetMenuAPIDeployment:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref MenuApiGateway
    DependsOn:
      - GetMenuApiMethodPost

  SaveMenuGatewayResponse4:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
      ResponseType: "DEFAULT_4XX"
      RestApiId:
        Ref: "MenuApiGateway"
      StatusCode: "200"

  SaveMenuResponse5:
    Type: "AWS::ApiGateway::GatewayResponse"
    Properties:
      ResponseParameters:
        gatewayresponse.header.Access-Control-Allow-Origin: "'*'"
        gatewayresponse.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
        gatewayresponse.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
      ResponseType: "DEFAULT_5XX"
      RestApiId:
        Ref: "MenuApiGateway"
      StatusCode: "200"

  SaveMenuApiResource:
    Type: "AWS::ApiGateway::Resource"
    Properties:
      RestApiId:
        Ref: "MenuApiGateway"
      ParentId:
        Fn::GetAtt: ["MenuApiGateway", "RootResourceId"]
      PathPart: "savemenu"

  SaveMenuMethodOptions:
    Type: "AWS::ApiGateway::Method"
    Properties:
      RestApiId:
        Ref: "MenuApiGateway"
      ResourceId:
        Ref: "SaveMenuApiResource"
      HttpMethod: "OPTIONS"
      AuthorizationType: "NONE"
      Integration:
        Type: "MOCK"
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: "{}"
      MethodResponses:
        - StatusCode: "200"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false
          ResponseModels:
            application/json: "Empty"

  SaveMenuApiMethodPost:
    Type: "AWS::ApiGateway::Method"
    Properties:
      RestApiId:
        Ref: "MenuApiGateway"
      ResourceId:
        Ref: "SaveMenuApiResource"
      HttpMethod: "POST"
      AuthorizationType: "NONE"
      Integration:
        Type: "AWS"
        IntegrationHttpMethod: "POST"
        Uri:
          Fn::Sub: "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:576225417277:function:saveMenuData/invocations"
        IntegrationResponses:
          - StatusCode: "200"
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        Credentials: "arn:aws:iam::576225417277:role/LambdaAdminRole"
      MethodResponses:
        - StatusCode: "200"
          ResponseModels:
            application/json: "Empty"
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false

  SaveMenuApiStage:
    Type: "AWS::ApiGateway::Stage"
    Properties:
      DeploymentId: !Ref SaveMenuAPIDeployment
      RestApiId: !Ref MenuApiGateway
      StageName: "dev2"

  SaveMenuAPIDeployment:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref MenuApiGateway
    DependsOn:
      - SaveMenuApiMethodPost
